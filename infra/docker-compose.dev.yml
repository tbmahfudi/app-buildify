name: App_Buildify
version: '3.8'

services:
  postgres:
    container_name: app_buildify_postgresql
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppass
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser"]
      interval: 5s
      timeout: 5s
      retries: 5

  
  # mysql:
  #   image: mysql:8.0
  #   environment:
  #     MYSQL_ROOT_PASSWORD: rootpass
  #     MYSQL_DATABASE: appdb
  #     MYSQL_USER: appuser
  #     MYSQL_PASSWORD: apppass
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  backend:
    container_name: app_buildify_backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      PYTHONPATH: /app    
      # Use PostgreSQL
      SQLALCHEMY_DATABASE_URL: postgresql+psycopg2://appuser:apppass@postgres:5432/appdb
      # Or use MySQL
      # SQLALCHEMY_DATABASE_URL: mysql+pymysql://appuser:apppass@mysql:3306/appdb
      SECRET_KEY: dev-secret-key-change-in-production
      ACCESS_TOKEN_EXPIRE_MIN: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 7
      ALLOWED_ORIGINS: http://localhost:8080,http://localhost:3000
    working_dir: /app      
    volumes:
      - ../backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    container_name: app_buildify_frontend
    image: nginx:1.27-alpine
    ports:
      - "8080:80"
    volumes:
      - ../frontend:/usr/share/nginx/html:ro
      - ../infra/nginx/app.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend

volumes:
  postgres_data:
  mysql_data: